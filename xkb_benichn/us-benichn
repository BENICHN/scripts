partial alphanumeric_keys
xkb_symbols "benichn" {

    name[Group1]= "English (BENICHN)";

    key <TLDE> { [grave, asciitilde      ] };
    key <AE01> { [	       exclam, 1,    exclamdown ] };
    key <AE02> { [	           at, 2 ] };
    key <AE03> { [	   numbersign, 3, logicalor, logicaland ] };
    key <AE04> { [	       dollar, 4, implies, ifonlyif ] };
    key <AE05> { [	      percent, 5, identical, approximate ] };
    key <AE06> { [    asciicircum   , 6, partialderivative, integral ] };
    key <AE07> { [	    ampersand, 7, union, intersection ] };
    key <AE08> { [	     asterisk, 8,includedin, includes ] };
    key <AE09> { [	    parenleft, 9, elementof, notelementof ] };
    key <AE10> { [	   parenright, 0, emptyset, notsign ] };
    key <AE11> { [     minus, underscore, multiply, squareroot ] };
    key <AE12> { [     equal,       plus,      approxeq,         plusminus ] };

    key <AD01> { [	   q,          Q,    Greek_theta,       Greek_THETA ] };
    key <AD02> { [	   w,          W,         Greek_omega,            Greek_OMEGA ] };
    key <AD03> { [	   e,          E,        Greek_epsilon,           Greek_EPSILON ] };
    key <AD04> { [	   r,          R,    Greek_rho,       Greek_RHO ] };
    key <AD05> { [	   t,          T,         Greek_tau,            Greek_TAU ] };
    key <AD06> { [	   y,          Y,    Greek_psi,       Greek_PSI ] };
    key <AD07> { [	   u,          U,        Greek_upsilon,           Greek_UPSILON ] };
    key <AD08> { [	   i,          I,        Greek_iota,           Greek_IOTA ] };
    key <AD09> { [	   o,          O,        Greek_omicron,           Greek_OMICRON ] };
    key <AD10> { [	   p,          P,    Greek_pi,       Greek_PI ] };
    key <AD11> { [ bracketleft,  braceleft,  guillemotleft, leftdoublequotemark ] };
    key <AD12> { [bracketright, braceright, guillemotright, rightdoublequotemark ] };

    key <AC01> { [	   a,          A,        Greek_alpha,           Greek_ALPHA ] };
    key <AC02> { [	   s,          S,        Greek_sigma,          Greek_SIGMA ] };
    key <AC03> { [	   d,          D,           Greek_delta,              Greek_DELTA ] };
    key <AC04> { [	   f,          F,             Greek_phi,                Greek_PHI ] };
    key <AC05> { [	   g,          G,             Greek_gamma,                Greek_GAMMA ] };
    key <AC06> { [	   h,          H,             Greek_eta,                Greek_ETA ] };
    key <AC07> { [	   j,          J,             Greek_chi,                Greek_CHI ] };
    key <AC08> { [	   k,          K,            Greek_kappa,               Greek_KAPPA ] };

    key <AC09> { [	   l,          L,        Greek_lambda,         Greek_LAMBDA ] };
    key <AC10> { [ semicolon,      colon ] };
    key <AC11> { [apostrophe,        quotedbl ] };

    key <AB01> { [	   z,          Z,            Greek_zeta,               Greek_ZETA ] };
    key <AB02> { [	   x,          X,             Greek_xi,                Greek_XI ] };
    key <AB03> { [	   c,          C,     ccedilla,             Ccedilla ] };
    key <AB04> { [	   v,          V ] };
    key <AB05> { [	   b,          B,             Greek_beta,                Greek_BETA ] };
    key <AB06> { [	   n,          N,        Greek_nu,           Greek_NU ] };
    key <AB07> { [	   m,          M,            Greek_mu,               Greek_MU ] };
    key <AB08> { [     comma,       less, leftarrow, lessthanequal   ] };
    key <AB09> { [    period,    greater, rightarrow , greaterthanequal  ] };
    key <AB10> { [     slash,   question, infinity,  questiondown ] };
    key <BKSL> { [ backslash,        bar ] };

    key <LSGT> { [ dead_acute,   dead_grave,            dead_circumflex,      dead_diaeresis ] };

    include "level3(ralt_switch)"
};